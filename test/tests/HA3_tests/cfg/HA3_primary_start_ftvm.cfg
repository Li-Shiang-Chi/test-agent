test_name = L3_primary_start_ftvm
#set test times for this test (> 1 )
test_times = 1
#fault tolerant level (0:no FTlevel, 1:FTlevel 1, 2:FTlevel 2)
level = 1
#IPMI supported
IPMI_supported = no
#Preprocess configuration

#check master monitor or not(yes/no)
pre_check_mm = no
#wait master monitor start time (sec) ex 1 or 1.1 ...
pre_mm_start_time = 1
#init cluster or not(yes/no)
pre_init_mm = yes

#preprocess for hardware failure
#check fault tolerant HostOS hardware part(yes/no)
pre_check_hostOS_hw = no

#preprocess OS
#check fault tolerance HostOS boot or not (yes/no)
pre_check_FT_hostOS = no
#check fault tolerance HostOS status (running/shutoff)
pre_FT_hostOS_status = running
#decide fault tolerance HostOS boot or not (yes/no)
pre_FT_hostOS_boot = yes
#decide fault tolerance HostOS shutdown or not (yes/no)
pre_FT_hostOS_shutdown = no
#wait HostOS boot time (sec)
pre_hostOS_boot_time = 200
#wait HostOS shutdown time (sec)
pre_hostOS_shutdown_time = 100
#preprocess check HostOS login (yes/no)
pre_FT_hostOS_login = yes
#wait hostOS login time (sec)
pre_FT_hostOS_login_time = 60

#check fault tolerance backupOS or not (yes/no)
pre_check_FT_backupOS = no

#check fault tolerance backupOS status (running/shutoff)
pre_FT_backupOS_status = running
#decide fault tolerance backupOS boot or not (yes/no)
pre_FT_backupOS_boot = no
#decide fault tolerance backupOS boot or not (yes/no)
pre_FT_backupOS_shutdown = no
#wait backupOS boot time (sec)
pre_backupOS_boot_time = 200
#wait backupOS shutdown time (sec)
pre_backupOS_shutdown_time = 100

#wait backupOS boot time (sec)
pre_slaveOS_boot_time = 200

#preprocess node mount to NFS(sec)
pre_node_wait_mount_nfs_time = 100

#wait os network shutdown time(sec)
pre_wait_node_os_shutdown_time = 10

#wait node boot time
pre_wait_node_boot_time = 200
#wait ssh port open time
pre_wait_ssh_port_time = 200
#wait ssh ready time
pre_wait_ssh_ready_time = 200

#preprocess FTsystem
#check HostOS fault tolerance VM system or not (yes/no)
pre_check_hostOS_FTsystem = yes
#if pre_check_hostOS_FTsystem is yes, decide HostOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pre_hostOS_FTsystem_start = yes
#wait HostOS FTsystem start time (sec) ex 1 or 1.1
pre_hostOS_FTsystem_start_time = 1

#check backupOS fault tolerance VM system or not (yes/no)
pre_check_backupOS_FTsystem = yes
#if pre_check_backupOS_FTsystem is yes, decide HostOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pre_backupOS_FTsystem_start = yes
#wait backupOS FTsystem start time (sec) ex 1 or 1.1
pre_backupOS_FTsystem_start_time = 1


#check slaveOS fault tolerance VM system or not (yes/no)
pre_check_slaveOS_FTsystem = yes
#if pre_check_backupOS_FTsystem is yes, decide HostOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pre_slaveOS_FTsystem_start = yes
#wait slaveOS FTsystem start time (sec) ex 1 or 1.1
pre_slaveOS_FTsystem_start_time = 1



#preprocess VM 
#check HostOS VM (yes/no)
pre_check_hostOS_VM = yes
#preprocess HostOS VM status (running/paused/shut off)
pre_hostOS_VM_status = shut off
#preprocess HostOS VM need restart if status is running (yes/no)
pre_hostOS_VM_restart = no
#wait HostOS VM boot time (sec)
pre_hostOS_VM_boot_time = 60
#wait HostOS VM shutdown time (sec)
pre_hostOS_VM_shutdown_time = 100
#preprocess check HostOS VM login (yes/no)
#Need pre_hostOS_VM_status is running and this config is yes then do check VM login
#check status first then check login
#if pre_hostOS_VM_boot_time too long, may cause check VM login too late 
pre_hostOS_VM_login = no
#wait VM login time (sec)
pre_hostOS_VM_login_time = 150

#check backupOS VM (yes/no)
pre_check_backupOS_VM = no
#preprocess backupOS VM status (running/paused/shut off)
pre_backupOS_VM_status = shut off
#wait backupOS VM boot time (sec)
pre_backupOS_VM_boot_time = 150
#wait backupOS VM shutdown time (sec)
pre_backupOS_VM_shutdown_time = 100

#check slaveOS VM (yes/no)
pre_check_slaveOS_VM = no
#preprocess slaveOS VM status (running/paused/shut off)
pre_slaveOS_VM_status = shut off
#wait backupOS VM boot time (sec)
pre_slaveOS_VM_boot_time = 150
#wait backupOS VM shutdown time (sec)
pre_slaveOS_VM_shutdown_time = 100

#Process_configuration
#up to test script self
#using for process.exec_L1_vm_crasher
#wait time then exec L1 vm crasher (sec)
pro_wait_time_exe_L1_crasher = 30
#wait HAagent add node time
pro_wait_add_node_time = 5



#Assert_configuration
#up to test script self
#set time for waiting then assert mm running (sec)
#ast_mm_running_wait_time = 1
#set time for waiting then assert libivirt running (sec)
#ast_libvirt_running_wait_time = 1
#set time for waiting then assert vm running (sec)
#using for Assert.vm_running_in_hostOS Assert.vm_running_in_backupOS
ast_vm_running_wait_time = 180
#using for Assert.vm_is_login_in_hostOS Assert.vm_is_login_in_backupOS
ast_vm_login_wait_time = 300
# set time for waiting then assert vm crash detected (sec)
#using for Assert.detect_fail_vm_crash
#ast_vm_crash_time = 60
#set time for waiting then assert vm process restart(sec)
#using for Assert.recovery_vm_p_restart
#ast_vm_p_restart_time = 60
ast_hostOS_running_wait_time  = 420




#Postprocess configuration
#host OS restart (yes/no)
pos_hostOS_restart = yes
#backup OS restart (yes/no)
pos_backupOS_restart = yes
#slave OS restart (yes/no)
pos_slaveOS_restart = yes
#NFS OS restart (yes/no)
pos_NFSOS_restart = no

#check primary os running or not(yes/no)
pos_check_primaryOS_status = yes
#check backup os running or not(yes/no)
pos_check_backupOS_status = yes
#check slave os running or not(yes/no)
pos_check_slaveOS_status = yes

#check HostOS  fault tolerance VM system start or not (yes/no)
pos_check_hostOS_FTsystem = yes
#if pos_check_hostOS_FTsystem_start is yes, decide HostOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pos_hostOS_FTsystem_start = yes
#wait HostOS FTsystem start time (sec) ex 1 or 1.1
pos_hostOS_FTsystem_start_time = 1

#check backupOS  fault tolerance VM system start or not (yes/no)
pos_check_backupOS_FTsystem = yes
#if pos_check_backupOS_FTsystem_start is yes, decide slaveOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pos_backupOS_FTsystem_start = yes
#wait HostOS FTsystem start time (sec) ex 1 or 1.1
pos_backupOS_FTsystem_start_time = 1

#check slaveOS  fault tolerance VM system start or not (yes/no)
pos_check_slaveOS_FTsystem = yes
#if pos_check_slaveOS_FTsystem_start is yes, decide slaveOS fault tolerance VM system start  (yes/no) 
#yes: start no:stop
pos_slaveOS_FTsystem_start = yes
#wait HostOS FTsystem start time (sec) ex 1 or 1.1
pos_slaveOS_FTsystem_start_time = 1

#check HostOS VM (yes/no)
pos_check_hostOS_VM = yes
#check hostOS VM status (running/pasused/shut off)
pos_hostOS_VM_status = shut off
#decide hostOS VM start (yes/no)
pos_hostOS_VM_boot = no
#decide hostOS VM shutdown (yes/no)
pos_hostOS_VM_shutdown = yes
#wait hostOS VM boot time (sec)
pos_hostOS_VM_boot_time = 60
#wait hostOS VM shutdown time (sec)
pos_hostOS_VM_shutdown_time = 20
#wati vm enable shutdown time
pos_hostOS_wait_VM_enable_shutdown_time = 10

#check backupOS VM (yes/no)
pos_check_backupOS_VM = yes
#check backupOS VM status (running/pasused/shut off)
pos_backupOS_VM_status = shut off
#decide backup VM shutdown (yes/no)
pos_backupOS_VM_shutdown = yes
#wait backupOS VM shutdown time (sec)
pos_backupOS_VM_shutdown_time = 20
#wati vm enable shutdown time
pos_backupOS_wait_VM_enable_shutdown_time = 10

#check slaveOS VM (yes/no)
pos_check_slaveOS_VM = yes
#check slaveOS VM status (running/pasused/shut off)
pos_slaveOS_VM_status = shut off
#decide slave VM shutdown (yes/no)
pos_slaveOS_VM_shutdown = yes
#wait slaveOS VM shutdown time (sec)
pos_slaveOS_VM_shutdown_time = 20
#wati vm enable shutdown time
pos_slaveOS_wait_VM_enable_shutdown_time = 10

#macro elements
mac_num = 3
#macro use ele (ex: 1 2,all)
mac_use = 1


mac_1 = test_times
mac_1_ori = 1
mac_1_ori_assert = True
mac_1_lower_bound = 1
mac_1_lower_bound_assert = True
mac_1_upper_bound = 5
mac_1_upper_bound_assert = True


mac_2 = pre_backupOS_boot_time
mac_2_ori = 100
mac_2_ori_assert = True
mac_2_lower_bound = 99
mac_2_lower_bound_assert = True
mac_2_upper_bound = 101
mac_2_upper_bound_assert = False

mac_3 = pre_VM_boot_time
mac_3_ori = 20
mac_3_ori_assert = True
mac_3_lower_bound = 19
mac_3_lower_bound_assert = False
mac_3_upper_bound = 21
mac_3_upper_bound_assert = False